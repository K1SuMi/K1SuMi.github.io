{"version":3,"sources":["utils/task.ts","screens/kanban/util.ts","utils/epic.ts","screens/epic/util.ts","screens/epic/create-epic.tsx","screens/epic/index.tsx","utils/kanban.ts","utils/task-type.ts","assets/task.svg","assets/bug.svg","screens/kanban/create-task.tsx","components/mark.tsx","components/drag-and-drop.tsx","screens/kanban/kanban-column.tsx","screens/kanban/create-kanban.tsx","components/epic-select.tsx","components/task-type-select.tsx","screens/kanban/search-panel.tsx","screens/kanban/task-modal.tsx","screens/kanban/index.tsx","screens/project/index.tsx"],"names":["useTasks","param","client","useHttp","useQuery","data","useProjectIdInUrl","id","useLocation","pathname","match","Number","useProjectInUrl","useProject","useKanbansSearchParams","projectId","useKanbansQueryKey","useTasksSearchParams","useUrlQueryParam","useMemo","typeId","undefined","processorId","epicId","name","useTasksQueryKey","useTaskModal","editingTaskId","setEditingTaskId","enabled","Boolean","useTask","editingTask","isLoading","startEdit","useCallback","close","useEpics","cleanObject","useEpicsSearchParams","useEpicsQueryKey","CreateEpic","props","queryKey","useMutation","params","method","useAddConfig","useAddEpic","addEpic","mutate","error","Form","useForm","form","onFinish","values","a","onClose","useEffect","resetFields","visible","forceRender","destroyOnClose","width","Background","Container","size","layout","style","Item","label","rules","required","message","placeholder","textAlign","loading","type","htmlType","styled","div","access","EpicScreen","currentProject","epics","tasks","deleteEpic","useDeleteConfig","useDeleteEpic","useState","epicCreateOpen","setEpicCreateOpen","between","gap","borderRadius","opacity","onClick","dataSource","itemLayout","renderItem","epic","ShadowCard","minWidth","Meta","title","backgroundColor","color","Modal","confirm","content","okText","cancelText","onOk","confirmDeleteEpic","description","dayjs","start","format","end","filter","task","map","display","to","Card","useKanbans","useTaskTypes","CreateTask","kanbanId","setName","addTask","useAddTask","mutateAsync","inputMode","setInputMode","submit","toggle","mode","onBlur","onPressEnter","value","onChange","evt","target","placement","arrowPointAtCenter","Mark","keyword","arr","split","str","index","length","Drop","children","provided","React","isValidElement","cloneElement","droppableProps","ref","innerRef","DropChild","forwardRef","Drag","draggableProps","dragHandleProps","TaskTypeIcon","taskTypes","find","taskType","src","taskIcon","bugIcon","alt","TaskCard","users","useUsers","fontFamily","user","More","kanban","deleteKanban","useDeleteKanban","overlay","KanbanColumn","allTasks","direction","droppableId","String","TaskContainer","draggableId","CreateKanban","addKanban","useAddKanban","EpicSelect","options","TaskTypeSelect","SearchPanel","searchParams","setSearchParams","useSetUrlSearchParam","marginBottom","defaultOptionName","labelCol","span","wrapperCol","TaskModal","taskLoading","useEditConfig","useEditTask","editTask","editLoading","getFieldsValue","deleteTask","useDeleteTask","setFieldsValue","onCancel","confirmLoading","initialValues","fontSize","useDragEnd","kanbans","reorderKanban","useReorderKanbanConfig","useReorderKanban","reorderTask","useReorderTaskConfig","useReorderTask","source","destination","fromId","toId","referenceId","fromKanbanId","toKanbanId","fromTask","toTask","KanbanScreen","useDocumentTitle","kanbanIsLoading","debouncedName","useDebounce","dragEnd","onDragEnd","ColumnsContainer","ProjectScreen","memo","routeType","units","useRputeType","Aside","selectedKeys","Main","path","element","window","location","replace","aside"],"mappings":"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","file":"static/js/10.9d614531.chunk.js","sourcesContent":["import { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { SortProps } from \"types/sort\";\nimport { Task } from \"types/task\";\nimport { useHttp } from \"./http\";\nimport {\n  useAddConfig,\n  useDeleteConfig,\n  useEditConfig,\n  useReorderTaskConfig,\n} from \"./use-optimistic-options\";\n\nexport const useTasks = (param?: Partial<Task>) => {\n  const client = useHttp();\n\n  return useQuery<Task[]>([\"tasks\", param], () =>\n    client(\"tasks\", { data: param })\n  );\n};\n/**\n * 添加 task\n * @returns mutate--调用其处理请求，并乐观更新\n */\nexport const useAddTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<Task>) =>\n      client(`tasks`, {\n        data: params,\n        method: \"POST\",\n      }),\n    useAddConfig(queryKey)\n  );\n};\n/**\n * 编辑 task\n * @returns mutate--调用其处理请求，并乐观更新\n */\nexport const useEditTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<Task>) =>\n      client(`tasks/${params.id}`, {\n        data: params,\n        method: \"PATCH\",\n      }),\n    useEditConfig(queryKey)\n  );\n};\n/**\n * 删除 task\n * @returns mutate--调用其处理请求，并乐观更新\n */\nexport const useDeleteTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`tasks/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteConfig(queryKey)\n  );\n};\n/**\n * 获取task详情\n * @param id\n */\nexport const useTask = (id?: number) => {\n  const client = useHttp();\n  return useQuery<Task>([\"task\", { id }], () => client(`tasks/${id}`), {\n    enabled: Boolean(id),\n  });\n};\n/**\n * task重新排序\n * @returns mutate--调用其处理请求，并乐观更新\n */\nexport const useReorderTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation((params: SortProps) => {\n    return client(\"tasks/reorder\", {\n      data: params,\n      method: \"POST\",\n    });\n  }, useReorderTaskConfig(queryKey));\n};\n","import { useCallback, useMemo } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { useProject } from \"utils/project\";\nimport { useTask } from \"utils/task\";\nimport { useUrlQueryParam } from \"utils/url\";\n\nexport const useProjectIdInUrl = () => {\n  const { pathname } = useLocation();\n  const id = pathname.match(/projects\\/(\\d+)/)?.[1];\n  return Number(id);\n};\n\nexport const useProjectInUrl = () => useProject(useProjectIdInUrl());\n\nexport const useKanbansSearchParams = () => ({\n  projectId: useProjectIdInUrl(),\n});\n\nexport const useKanbansQueryKey = () => [\"kanbans\", useKanbansSearchParams()];\n\nexport const useTasksSearchParams = () => {\n  const [param] = useUrlQueryParam([\"name\", \"typeId\", \"processorId\", \"epicId\"]);\n  const projectId = useProjectIdInUrl();\n  return useMemo(\n    () => ({\n      projectId,\n      typeId: Number(param.typeId) || undefined,\n      processorId: Number(param.processorId) || undefined,\n      epicId: Number(param.epicId) || undefined,\n      name: param.name,\n    }),\n    [projectId, param]\n  );\n};\n\nexport const useTasksQueryKey = () => [\"tasks\", useTasksSearchParams()];\n\nexport const useTaskModal = () => {\n  const [{ editingTaskId }, setEditingTaskId] = useUrlQueryParam([\n    \"editingTaskId\",\n  ]);\n  const { data: editingTask, isLoading } = useTask(Number(editingTaskId));\n  const startEdit = useCallback(\n    (id: number) => setEditingTaskId({ editingTaskId: id }),\n    [setEditingTaskId]\n  );\n  const close = useCallback(\n    () => setEditingTaskId({ editingTaskId: \"\" }),\n    [setEditingTaskId]\n  );\n\n  return {\n    editingTaskId,\n    editingTask,\n    startEdit,\n    close,\n    isLoading,\n  };\n};\n","import { useQuery, QueryKey, useMutation } from \"react-query\";\nimport { Epic } from \"types/epic\";\nimport { cleanObject } from \"utils\";\nimport { useHttp } from \"./http\";\nimport { useAddConfig, useDeleteConfig } from \"./use-optimistic-options\";\n\nexport const useEpics = (param?: Partial<Epic>) => {\n  const client = useHttp();\n\n  return useQuery<Epic[]>([\"epics\", cleanObject(param)], () =>\n    client(\"epics\", { data: param })\n  );\n};\n/**\n * 添加epic\n * @returns mutate--调用其处理请求，并乐观更新\n */\nexport const useAddEpic = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<Epic>) =>\n      client(`epics`, {\n        data: params,\n        method: \"POST\",\n      }),\n    useAddConfig(queryKey)\n  );\n};\n\n/**\n * 删除epic\n * @returns mutate--调用其处理请求，并乐观更新\n */\nexport const useDeleteEpic = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`epics/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteConfig(queryKey)\n  );\n};\n","import { useProjectIdInUrl } from \"screens/kanban/util\";\n\nexport const useEpicsSearchParams = () => ({\n  projectId: useProjectIdInUrl(),\n});\n\nexport const useEpicsQueryKey = () => [\"epics\", useEpicsSearchParams()];\n","import styled from \"@emotion/styled\";\nimport { Button, Drawer, DrawerProps, Form, Input, Spin } from \"antd\";\nimport { ErrorBox } from \"components/lib\";\nimport { useEffect } from \"react\";\nimport { useProjectIdInUrl } from \"screens/kanban/util\";\nimport { useAddEpic } from \"utils/epic\";\nimport { useEpicsQueryKey } from \"./util\";\nimport access from \"assets/access.svg\";\n\nexport const CreateEpic = (\n  props: Pick<DrawerProps, \"visible\"> & { onClose: () => void }\n) => {\n  const { mutate: addEpic, isLoading, error } = useAddEpic(useEpicsQueryKey());\n  const [form] = Form.useForm();\n  const projectId = useProjectIdInUrl();\n\n  const onFinish = async (values: any) => {\n    await addEpic({ ...values, projectId });\n    props.onClose();\n  };\n\n  useEffect(() => {\n    form.resetFields();\n  }, [form, props.visible]);\n\n  return (\n    <Drawer\n      visible={props.visible}\n      onClose={props.onClose}\n      forceRender={true}\n      destroyOnClose={true}\n      width={\"100%\"}\n    >\n      <Background>\n        <Container>\n          {isLoading ? (\n            <Spin size={\"large\"} />\n          ) : (\n            <>\n              <h1>创建任务组</h1>\n              <ErrorBox error={error} />\n              <Form\n                form={form}\n                layout={\"vertical\"}\n                style={{ width: \"40rem\" }}\n                onFinish={onFinish}\n              >\n                <Form.Item\n                  label={\"名称\"}\n                  name={\"name\"}\n                  rules={[{ required: true, message: \"请输入任务组名\" }]}\n                >\n                  <Input placeholder={\"请输入任务组名称\"} />\n                </Form.Item>\n\n                <Form.Item style={{ textAlign: \"right\" }}>\n                  <Button\n                    loading={isLoading}\n                    type={\"primary\"}\n                    htmlType={\"submit\"}\n                  >\n                    提交\n                  </Button>\n                </Form.Item>\n              </Form>\n            </>\n          )}\n        </Container>\n      </Background>\n    </Drawer>\n  );\n};\n\nconst Container = styled.div`\n  height: 80vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  background-attachment: fixed;\n  background-position: left 32% bottom 60%;\n  background-size: contain;\n  background-repeat: no-repeat;\n  opacity: 0.8;\n  background-image: url(${access});\n`;\n","import styled from \"@emotion/styled\";\nimport { Button, Card, List, Modal } from \"antd\";\nimport { Row, ScreenContainer } from \"components/lib\";\nimport dayjs from \"dayjs\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useProjectInUrl } from \"screens/kanban/util\";\nimport { Epic } from \"types/epic\";\nimport { useDeleteEpic, useEpics } from \"utils/epic\";\nimport { useTasks } from \"utils/task\";\nimport { CreateEpic } from \"./create-epic\";\nimport { useEpicsQueryKey } from \"./util\";\n\nexport const EpicScreen = () => {\n  const { data: currentProject } = useProjectInUrl();\n  const { data: epics } = useEpics({ projectId: currentProject?.id });\n  const { data: tasks } = useTasks({ projectId: currentProject?.id });\n\n  const { mutate: deleteEpic } = useDeleteEpic(useEpicsQueryKey());\n  const [epicCreateOpen, setEpicCreateOpen] = useState(false);\n\n  const confirmDeleteEpic = (epic: Epic) => {\n    Modal.confirm({\n      title: \"🙃你确定要删除这个任务组🐴？\",\n      content: \"😡别怪我没提醒你\",\n      okText: \"😶确定\",\n      cancelText: \"😅算了算了\",\n      onOk() {\n        deleteEpic({ id: epic.id });\n      },\n    });\n  };\n  return (\n    <ScreenContainer>\n      <Row between={true} gap={true}>\n        <h1>{currentProject?.name}任务组</h1>\n        <Button\n          style={{ borderRadius: \"10px\", opacity: \"0.9\" }}\n          type={\"primary\"}\n          onClick={() => setEpicCreateOpen(true)}\n        >\n          创建任务组\n        </Button>\n      </Row>\n      <List\n        dataSource={epics}\n        itemLayout={\"vertical\"}\n        renderItem={(epic) => (\n          <List.Item>\n            <ShadowCard style={{ minWidth: \"300px\" }}>\n              <List.Item.Meta\n                title={\n                  <Row between={true}>\n                    <span>{epic.name}</span>\n                    <Button\n                      style={{\n                        backgroundColor: \"#2fcff7\",\n                        color: \"white\",\n                        opacity: \"0.8\",\n                      }}\n                      onClick={() => confirmDeleteEpic(epic)}\n                      type={\"ghost\"}\n                    >\n                      删除\n                    </Button>\n                  </Row>\n                }\n                description={\n                  <div>\n                    <div>\n                      开始时间：{dayjs(epic.start).format(\"YYYY-MM-DD\")}\n                    </div>\n                    <div>结束时间：{dayjs(epic.end).format(\"YYYY-MM-DD\")}</div>\n                  </div>\n                }\n              />\n              <div>\n                任务：\n                {tasks\n                  ?.filter((task) => task.epicId === epic.id)\n                  .map((task) => (\n                    <Link\n                      style={{ display: \"flex\" }}\n                      to={`/projects/${currentProject?.id}/kanban?editingTaskId=${task.id}`}\n                      key={task.id}\n                    >\n                      {`📝 ${task.name}`}\n                    </Link>\n                  ))}\n              </div>\n            </ShadowCard>\n          </List.Item>\n        )}\n      />\n      <CreateEpic\n        onClose={() => setEpicCreateOpen(false)}\n        visible={epicCreateOpen}\n      />\n    </ScreenContainer>\n  );\n};\n\nconst ShadowCard = styled(Card)`\n  border-radius: 5px;\n  margin-bottom: 0.5em;\n  transition: all 0.5s ease-in-out;\n  &:hover {\n    color: #6d43e2;\n    background-color: #bcc7fc;\n    transform: scale(1.02);\n    box-shadow: inset -4px -4px 10px rgba(164, 237, 240, 0.5),\n      inset 4px 4px 10px rgba(4, 196, 221, 0.1);\n  }\n`;\n","import { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { Kanban } from \"types/kanban\";\nimport { SortProps } from \"types/sort\";\nimport { cleanObject } from \"utils\";\nimport { useHttp } from \"./http\";\nimport {\n  useAddConfig,\n  useDeleteConfig,\n  useReorderKanbanConfig,\n} from \"./use-optimistic-options\";\n\nexport const useKanbans = (param?: Partial<Kanban>) => {\n  const client = useHttp();\n\n  return useQuery<Kanban[]>([\"kanbans\", cleanObject(param)], () =>\n    client(\"kanbans\", { data: param })\n  );\n};\n/**\n * 添加看板\n * @returns mutate--调用其处理请求，并乐观更新\n */\nexport const useAddKanban = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<Kanban>) =>\n      client(`kanbans`, {\n        data: params,\n        method: \"POST\",\n      }),\n    useAddConfig(queryKey)\n  );\n};\n\n/**\n * 删除看板\n * @returns mutate--调用其处理请求，并乐观更新\n */\nexport const useDeleteKanban = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`kanbans/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteConfig(queryKey)\n  );\n};\n/**\n * 看板重新排序\n *@returns mutate--调用其处理请求，并乐观更新\n */\nexport const useReorderKanban = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation((params: SortProps) => {\n    return client(\"kanbans/reorder\", {\n      data: params,\n      method: \"POST\",\n    });\n  }, useReorderKanbanConfig(queryKey));\n};\n","import { useQuery } from \"react-query\";\nimport { TaskType } from \"types/task-type\";\nimport { useHttp } from \"./http\";\n\nexport const useTaskTypes = () => {\n  const client = useHttp();\n\n  return useQuery<TaskType[]>([\"taskTypes\"], () => client(\"taskTypes\"));\n};\n","export default __webpack_public_path__ + \"static/media/task.69774797.svg\";","export default __webpack_public_path__ + \"static/media/bug.5d8e8fd5.svg\";","import { Button, Card, Input, Tooltip } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useAddTask } from \"utils/task\";\nimport {\n  useProjectIdInUrl,\n  useTasksQueryKey,\n  useTasksSearchParams,\n} from \"./util\";\n\nexport const CreateTask = ({ kanbanId }: { kanbanId: number }) => {\n  const [name, setName] = useState(\"\");\n  const { mutateAsync: addTask } = useAddTask(useTasksQueryKey());\n  const projectId = useProjectIdInUrl();\n  const { processorId, epicId } = useTasksSearchParams();\n  const [inputMode, setInputMode] = useState(false);\n\n  const submit = async () => {\n    await addTask({ projectId, name, kanbanId, processorId, epicId });\n    setInputMode(false);\n    setName(\"\");\n  };\n\n  const toggle = () => setInputMode((mode) => !mode);\n\n  useEffect(() => {\n    if (!inputMode) {\n      setName(\"\");\n    }\n  }, [inputMode]);\n  if (!inputMode) {\n    return (\n      <Tooltip\n        placement=\"topLeft\"\n        title=\"初始值为当前筛选器，类型默认为task\"\n        color={\"cyan\"}\n        arrowPointAtCenter\n      >\n        <Button style={{ borderRadius: 6 }} type={\"dashed\"} onClick={toggle}>\n          👉创建事务\n        </Button>\n      </Tooltip>\n    );\n  }\n  return (\n    <Card>\n      <Input\n        onBlur={toggle}\n        placeholder={\"需要做些什么\"}\n        onPressEnter={submit}\n        value={name}\n        onChange={(evt) => setName(evt.target.value)}\n      />\n    </Card>\n  );\n};\n","/**\n * keyword 高亮\n * @param name\n * @param keyword\n */\nexport const Mark = ({ name, keyword }: { name: string; keyword: string }) => {\n  if (!keyword) {\n    return <>{name}</>;\n  }\n  const arr = name.split(keyword);\n  return (\n    <>\n      {arr.map((str: string, index: number) => (\n        <span key={index}>\n          {str}\n          {index === arr.length - 1 ? null : (\n            <span style={{ color: \"#257AFD\" }}>{keyword}</span>\n          )}\n        </span>\n      ))}\n    </>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport {\n  Droppable,\n  Draggable,\n  DroppableProvided,\n  DroppableProps,\n  DraggableProps,\n  DroppableProvidedProps,\n} from \"react-beautiful-dnd\";\n\ntype DropProps = Omit<DroppableProps, \"children\"> & { children: ReactNode };\n\ntype DropChildProps = Partial<\n  { provided: DroppableProvided } & DroppableProvidedProps\n> &\n  React.HtmlHTMLAttributes<HTMLDivElement>;\n\ntype DragProps = Omit<DraggableProps, \"children\"> & { children: ReactNode };\n\nexport const Drop = ({ children, ...props }: DropProps) => {\n  return (\n    <Droppable {...props}>\n      {(provided) => {\n        if (React.isValidElement(children)) {\n          //以子元素为样板克隆并返回新的React元素，强制为所有子元素添加props\n          return React.cloneElement(children, {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            provided,\n          });\n        }\n        return <div />;\n      }}\n    </Droppable>\n  );\n};\n//创建一个React组件，这个组件能够将其接受的 ref 属性转发到其组件树下的另一个组件中。\nexport const DropChild = React.forwardRef<HTMLDivElement, DropChildProps>(\n  ({ children, ...props }, ref) => (\n    <div ref={ref} {...props}>\n      {children}\n      {props.provided?.placeholder}\n    </div>\n  )\n);\n\nexport const Drag = ({ children, ...props }: DragProps) => {\n  return (\n    <Draggable {...props}>\n      {(provided) => {\n        if (React.isValidElement(children)) {\n          return React.cloneElement(children, {\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            ref: provided.innerRef,\n          });\n        }\n        return <div />;\n      }}\n    </Draggable>\n  );\n};\n","import { Kanban } from \"types/kanban\";\nimport { useTaskTypes } from \"utils/task-type\";\nimport { useKanbansQueryKey, useTaskModal, useTasksSearchParams } from \"./util\";\nimport taskIcon from \"assets/task.svg\";\nimport bugIcon from \"assets/bug.svg\";\nimport styled from \"@emotion/styled\";\nimport { Button, Card, Dropdown, Menu, Modal, Tooltip } from \"antd\";\nimport { CreateTask } from \"./create-task\";\nimport { Task } from \"types/task\";\nimport { Mark } from \"components/mark\";\nimport { useDeleteKanban } from \"utils/kanban\";\nimport { Row } from \"components/lib\";\nimport React from \"react\";\nimport { Drag, Drop } from \"components/drag-and-drop\";\nimport { useUsers } from \"utils/user\";\nimport { useEpics } from \"utils/epic\";\nimport { useEpicsSearchParams } from \"screens/epic/util\";\n\ninterface KanbanColumnProps {\n  kanban: Kanban;\n  allTasks: Task[] | undefined;\n}\n\nconst TaskTypeIcon = ({ id }: { id: number }) => {\n  const { data: taskTypes } = useTaskTypes();\n  const name = taskTypes?.find((taskType) => taskType.id === id)?.name;\n  if (!name) {\n    return null;\n  }\n  return <img src={name === \"task\" ? taskIcon : bugIcon} alt={\"taskType\"} />;\n};\n\nconst TaskCard = ({ task }: { task: Task }) => {\n  const { startEdit } = useTaskModal();\n  const { name: keyword } = useTasksSearchParams();\n  const { data: users } = useUsers();\n  const { data: epics } = useEpics(useEpicsSearchParams());\n\n  return (\n    <Tooltip\n      placement=\"topLeft\"\n      title=\"点击修改，拖动进行布局\"\n      color={\"cyan\"}\n      arrowPointAtCenter\n    >\n      <div>\n        <ShadowCard onClick={() => startEdit(task.id)} key={task.id}>\n          <Mark name={`任务：📝${task.name}`} keyword={keyword} />\n          <div style={{ fontFamily: \"Tahoma\" }}>\n            type：\n            <TaskTypeIcon id={task.typeId} />\n            <div>\n              经办人：🤵\n              {users?.find((user) => task?.processorId === user.id)?.name ||\n                \"未知\"}\n            </div>\n            <div>\n              任务组：🗃️\n              {epics?.find((epic) => task.epicId === epic.id)?.name || \"未知\"}\n            </div>\n          </div>\n        </ShadowCard>\n      </div>\n    </Tooltip>\n  );\n};\n\nconst More = ({ kanban }: { kanban: Kanban }) => {\n  const { mutate: deleteKanban } = useDeleteKanban(useKanbansQueryKey());\n  const confirmDeleteKanban = () => {\n    Modal.confirm({\n      title: \"🙃你确定要删除这个看板🐴？\",\n      content: \"😡别怪我没提醒你\",\n      okText: \"😶确定\",\n      cancelText: \"😅算了算了\",\n      onOk() {\n        deleteKanban({ id: kanban.id });\n      },\n    });\n  };\n  const overlay = (\n    <Menu>\n      <Menu.Item>\n        <Button type={\"link\"} onClick={confirmDeleteKanban}>\n          删除\n        </Button>\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <Dropdown overlay={overlay}>\n      <Button type={\"link\"}>...</Button>\n    </Dropdown>\n  );\n};\n\nexport const KanbanColumn = React.forwardRef<HTMLDivElement, KanbanColumnProps>(\n  ({ kanban, allTasks, ...props }, ref) => {\n    const tasks = allTasks?.filter((task) => task.kanbanId === kanban.id);\n\n    return (\n      <Container ref={ref} {...props}>\n        <Row between={true}>\n          <h2>{kanban.name} 💡</h2>\n          <More kanban={kanban} key={kanban.id} />\n        </Row>\n        <Drop\n          type={\"ROW\"}\n          direction={\"vertical\"}\n          droppableId={String(kanban.id)}\n        >\n          <TaskContainer>\n            {tasks?.map((task, index) => (\n              <Drag key={task.id} index={index} draggableId={\"task\" + task.id}>\n                <div ref={ref}>\n                  <TaskCard task={task} key={task.id} />\n                </div>\n              </Drag>\n            ))}\n            <CreateTask kanbanId={kanban.id} />\n          </TaskContainer>\n        </Drop>\n      </Container>\n    );\n  }\n);\n\nexport const Container = styled.div`\n  min-width: 27rem;\n  border-radius: 6px;\n  background-color: rgb(244, 245, 247);\n  display: flex;\n  flex-direction: column;\n  padding: 0.7rem 0.7rem 1rem;\n  margin-right: 1.5rem;\n  transition: all 0.5s ease-in-out;\n  &:hover {\n    background-color: #caf2f5;\n    transform: scale(0.98);\n    box-shadow: inset -4px -4px 10px rgba(255, 255, 255, 0.5),\n      inset 4px 4px 10px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst TaskContainer = styled.div`\n  min-height: 5px;\n  overflow: scroll;\n  flex: 1;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\nconst ShadowCard = styled(Card)`\n  cursor: pointer;\n  border-radius: 10px;\n  margin-bottom: 0.5em;\n  transition: all 0.8s linear;\n  &:hover {\n    color: #2acfdb;\n    transform: scale(0.97);\n    box-shadow: inset -4px -4px 10px rgba(164, 237, 240, 0.5),\n      inset 4px 4px 10px rgba(4, 196, 221, 0.1);\n  }\n`;\n","import { Input } from \"antd\";\nimport { useState } from \"react\";\nimport { useAddKanban } from \"utils/kanban\";\nimport { Container } from \"./kanban-column\";\nimport { useKanbansQueryKey, useProjectIdInUrl } from \"./util\";\n\nexport const CreateKanban = () => {\n  const [name, setName] = useState(\"\");\n  const projectId = useProjectIdInUrl();\n  const { mutateAsync: addKanban } = useAddKanban(useKanbansQueryKey());\n\n  const submit = async () => {\n    await addKanban({ name, projectId });\n    setName(\"\");\n  };\n  return (\n    <Container>\n      <Input\n        size={\"large\"}\n        placeholder={\"新建看板👨‍💻\"}\n        onPressEnter={submit}\n        value={name}\n        onChange={(evt) => setName(evt.target.value)}\n      />\n    </Container>\n  );\n};\n","import { useEpicsSearchParams } from \"screens/epic/util\";\nimport { useEpics } from \"utils/epic\";\nimport { IdSelect } from \"./id-select\";\n\nexport const EpicSelect = (props: React.ComponentProps<typeof IdSelect>) => {\n  const { data: epics } = useEpics(useEpicsSearchParams());\n  return <IdSelect options={epics || []} {...props}></IdSelect>;\n};\n","import { useTaskTypes } from \"utils/task-type\";\nimport { IdSelect } from \"./id-select\";\n\nexport const TaskTypeSelect = (\n  props: React.ComponentProps<typeof IdSelect>\n) => {\n  const { data: taskTypes } = useTaskTypes();\n  return <IdSelect options={taskTypes || []} {...props}></IdSelect>;\n};\n","import { Button, Input } from \"antd\";\nimport { EpicSelect } from \"components/epic-select\";\nimport { Row } from \"components/lib\";\nimport { TaskTypeSelect } from \"components/task-type-select\";\nimport { UserSelect } from \"components/user-select\";\nimport { useSetUrlSearchParam } from \"utils/url\";\nimport { useTasksSearchParams } from \"./util\";\n\nexport const SearchPanel = () => {\n  const searchParams = useTasksSearchParams();\n  const setSearchParams = useSetUrlSearchParam();\n  const reset = () => {\n    setSearchParams({\n      typeId: undefined,\n      processorId: undefined,\n      epicId: undefined,\n      name: undefined,\n    });\n  };\n  return (\n    <Row marginBottom={4} gap={true}>\n      <Input\n        style={{ width: \"20rem\" }}\n        placeholder={\"任务名\"}\n        value={searchParams.name}\n        onChange={(evt) =>\n          setSearchParams({ ...searchParams, name: evt.target.value })\n        }\n      />\n      <UserSelect\n        defaultOptionName={\"经办人\"}\n        value={searchParams.processorId}\n        onChange={(value) => setSearchParams({ processorId: value })}\n      />\n      <TaskTypeSelect\n        defaultOptionName={\"类型\"}\n        value={searchParams.typeId}\n        onChange={(value) => setSearchParams({ typeId: value })}\n      />\n      <EpicSelect\n        defaultOptionName={\"任务组\"}\n        value={searchParams.epicId}\n        onChange={(value) => setSearchParams({ epicId: value })}\n      />\n      <Button onClick={reset}>清除筛选器</Button>\n    </Row>\n  );\n};\n","import { Button, Form, Input, Modal, Spin } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { EpicSelect } from \"components/epic-select\";\nimport { TaskTypeSelect } from \"components/task-type-select\";\nimport { UserSelect } from \"components/user-select\";\nimport { useEffect } from \"react\";\nimport { useDeleteTask, useEditTask } from \"utils/task\";\nimport { useTaskModal, useTasksQueryKey } from \"./util\";\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\nexport const TaskModal = () => {\n  const [form] = useForm();\n  const {\n    editingTaskId,\n    editingTask,\n    close,\n    isLoading: taskLoading,\n  } = useTaskModal();\n  const { mutateAsync: editTask, isLoading: editLoading } = useEditTask(\n    useTasksQueryKey()\n  );\n\n  const onCancel = () => {\n    form.resetFields();\n    close();\n  };\n  const onOk = async () => {\n    await editTask({ ...editingTask, ...form.getFieldsValue() });\n    close();\n    form.resetFields();\n  };\n\n  const { mutateAsync: deleteTask } = useDeleteTask(useTasksQueryKey());\n  const confirmDeleteTask = () => {\n    Modal.confirm({\n      title: \"🙃你确定要删除这个任务🐴？\",\n      content: \"😡别怪我没提醒你\",\n      okText: \"😶确定\",\n      cancelText: \"😅算了算了\",\n      async onOk() {\n        await deleteTask({ id: Number(editingTaskId) });\n        close();\n        form.resetFields();\n      },\n    });\n  };\n\n  useEffect(() => {\n    form.setFieldsValue(editingTask);\n  }, [form, editingTask]);\n\n  return (\n    <Modal\n      forceRender={true}\n      onCancel={onCancel}\n      onOk={onOk}\n      okText={\"确认\"}\n      cancelText={\"取消\"}\n      confirmLoading={editLoading}\n      title={\"编辑任务\"}\n      visible={!!editingTaskId}\n    >\n      {taskLoading ? (\n        <Spin size={\"large\"} />\n      ) : (\n        <div>\n          <Form {...layout} initialValues={editingTask} form={form}>\n            <Form.Item\n              label={\"任务名\"}\n              name={\"name\"}\n              rules={[{ required: true, message: \"请输入任务名\" }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item label={\"经办人\"} name={\"processorId\"}>\n              <UserSelect defaultOptionName={\"经办人\"} />\n            </Form.Item>\n            <Form.Item label={\"类型\"} name={\"typeId\"}>\n              <TaskTypeSelect />\n            </Form.Item>\n            <Form.Item label={\"任务组\"} name={\"epicId\"}>\n              <EpicSelect defaultOptionName={\"任务组\"} />\n            </Form.Item>\n          </Form>\n          <div style={{ textAlign: \"right\" }}>\n            <Button\n              onClick={confirmDeleteTask}\n              type={\"primary\"}\n              style={{ fontSize: \"14px\" }}\n              size={\"small\"}\n            >\n              删除\n            </Button>\n          </div>\n        </div>\n      )}\n    </Modal>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { Spin } from \"antd\";\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport { ScreenContainer } from \"components/lib\";\nimport { useDebounce, useDocumentTitle } from \"utils\";\nimport { useKanbans, useReorderKanban } from \"utils/kanban\";\nimport { useReorderTask, useTasks } from \"utils/task\";\nimport { CreateKanban } from \"./create-kanban\";\nimport { KanbanColumn } from \"./kanban-column\";\nimport { SearchPanel } from \"./search-panel\";\nimport { TaskModal } from \"./task-modal\";\nimport {\n  useKanbansQueryKey,\n  useKanbansSearchParams,\n  useProjectInUrl,\n  useTasksQueryKey,\n  useTasksSearchParams,\n} from \"./util\";\nimport { Drag, Drop, DropChild } from \"components/drag-and-drop\";\nimport { useCallback } from \"react\";\n\nexport const useDragEnd = () => {\n  const { data: kanbans } = useKanbans(useKanbansSearchParams());\n  const { data: allTasks = [] } = useTasks(useTasksSearchParams());\n  const { mutate: reorderKanban } = useReorderKanban(useKanbansQueryKey());\n  const { mutate: reorderTask } = useReorderTask(useTasksQueryKey());\n  return useCallback(\n    ({ source, destination, type }: DropResult) => {\n      if (!destination) {\n        return;\n      }\n      //看板重排序\n      if (type === \"COLUMN\") {\n        const fromId = kanbans?.[source.index].id;\n        const toId = kanbans?.[destination.index].id;\n\n        if (!fromId || !toId || fromId === toId) {\n          return;\n        }\n        const type = destination.index > source.index ? \"after\" : \"before\";\n        reorderKanban({ fromId, referenceId: toId, type });\n      }\n      //任务重排序\n      if (type === \"ROW\") {\n        const fromKanbanId = +source.droppableId;\n        const toKanbanId = +destination.droppableId;\n        //不予许在同一看板下交换任务顺序\n        if (fromKanbanId === toKanbanId) {\n          return;\n        }\n\n        const fromTask = allTasks.filter(\n          (task) => task.kanbanId === fromKanbanId\n        )[source.index];\n        const toTask = allTasks.filter((task) => task.kanbanId === toKanbanId)[\n          destination.index\n        ];\n\n        if (fromTask?.id === toTask?.id) {\n          return;\n        }\n        reorderTask({\n          fromId: fromTask?.id,\n          referenceId: toTask?.id,\n          fromKanbanId,\n          toKanbanId,\n          type:\n            fromKanbanId === toKanbanId && destination.index > source.index\n              ? \"after\"\n              : \"before\",\n        });\n      }\n    },\n    [kanbans, reorderKanban, allTasks, reorderTask]\n  );\n};\n\nexport const KanbanScreen = () => {\n  useDocumentTitle(\"看板列表\");\n\n  const { data: kanbans, isLoading: kanbanIsLoading } = useKanbans(\n    useKanbansSearchParams()\n  );\n  const { data: currentProject } = useProjectInUrl();\n\n  const param = useTasksSearchParams();\n  //只对 name参数 debounce\n  const debouncedName = useDebounce({ name: param.name }, 2000);\n  const { data: allTasks, isLoading: taskIsLoading } = useTasks({\n    ...param,\n    ...debouncedName,\n  });\n\n  const isLoading = taskIsLoading || kanbanIsLoading;\n\n  const dragEnd = useDragEnd();\n  return (\n    <DragDropContext onDragEnd={dragEnd}>\n      <ScreenContainer>\n        <h1>{currentProject?.name}看板</h1>\n        <SearchPanel />\n        {isLoading ? (\n          <Spin size={\"large\"} />\n        ) : (\n          <ColumnsContainer>\n            <Drop\n              type={\"COLUMN\"}\n              direction={\"horizontal\"}\n              droppableId={\"kanban\"}\n            >\n              <DropChild style={{ display: \"flex\" }}>\n                {kanbans?.map((kanban, index) => (\n                  <Drag\n                    key={kanban.id}\n                    draggableId={\"kanban\" + kanban.id}\n                    index={index}\n                  >\n                    <KanbanColumn\n                      kanban={kanban}\n                      allTasks={allTasks}\n                      key={kanban.id}\n                    />\n                  </Drag>\n                ))}\n              </DropChild>\n            </Drop>\n            <CreateKanban />\n          </ColumnsContainer>\n        )}\n        <TaskModal />\n      </ScreenContainer>\n    </DragDropContext>\n  );\n};\n\nexport const ColumnsContainer = styled.div`\n  display: flex;\n  overflow-x: scroll;\n  flex: 1;\n`;\n","import styled from \"@emotion/styled\";\nimport { Menu } from \"antd\";\nimport React from \"react\";\nimport { Link, Navigate, Route, Routes, useLocation } from \"react-router-dom\";\nimport { EpicScreen } from \"screens/epic\";\nimport { KanbanScreen } from \"screens/kanban\";\n\nconst useRputeType = () => {\n  const units = useLocation().pathname.split(\"/\");\n  return units[units.length - 1];\n};\n\nconst ProjectScreen = React.memo(() => {\n  const routeType = useRputeType();\n  return (\n    <Container>\n      <Aside>\n        <Menu mode={\"inline\"} selectedKeys={[routeType]}>\n          <Menu.Item key={\"kanban\"}>\n            <Link to={\"kanban\"}>看板</Link>\n          </Menu.Item>\n          <Menu.Item key={\"epic\"}>\n            <Link to={\"epic\"}>任务组</Link>\n          </Menu.Item>\n        </Menu>\n      </Aside>\n      <Main>\n        <Routes>\n          <Route path={\"/kanban\"} element={<KanbanScreen />} />\n          <Route path={\"/epic\"} element={<EpicScreen />} />\n          <Navigate to={window.location.pathname + \"/kanban\"} replace={true} />\n        </Routes>\n      </Main>\n    </Container>\n  );\n});\n\nconst Aside = styled.aside`\n  border-color: rgb(244, 245, 247);\n  display: flex;\n`;\n\nconst Main = styled.div`\n  box-shadow: -5px 0 5px rgba(0, 0, 0, 0.1);\n  display: flex;\n  overflow: hidden;\n`;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 16rem 1fr;\n`;\n\nexport default ProjectScreen;\n"],"sourceRoot":""}