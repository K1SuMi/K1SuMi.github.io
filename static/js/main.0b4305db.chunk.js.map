{"version":3,"sources":["assets/space.svg","components/lib.tsx","utils/http.ts","utils/use-async.ts","App.tsx","reportWebVitals.ts","context/index.tsx","index.tsx","auth-provider.ts","utils/index.ts","context/auth-context.tsx"],"names":["FullPageLoading","FullPage","size","FullPageErrorFallback","error","ErrorBox","isError","Text","type","message","Row","styled","div","props","between","undefined","marginBottom","gap","space","ButtonNoPadding","Button","ScreenContainer","apiUrl","process","http","endpoint","a","data","token","headers","customConfig","config","method","Authorization","toUpperCase","qs","stringify","body","JSON","window","fetch","then","response","status","auth","location","reload","Promise","reject","json","ok","useHttp","user","useAuth","useCallback","defaultConfig","throwOnError","defaultIinitialState","stat","useAsync","initialState","initialConfig","useReducer","state","action","dispatch","useState","retry","setRetry","safeDispatch","mountedRef","useMountedRef","current","useSafeDispatch","setData","setError","run","promise","runConfig","Error","catch","isIdle","isLoading","isSuccess","AuthenticatedApp","React","lazy","UnauthenticatedApp","App","className","Suspense","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppProviders","children","QueryClientProvider","client","QueryClient","loadServer","ReactDOM","render","StrictMode","document","getElementById","localStorageKey","getToken","localStorage","getItem","handleUserResponse","setItem","login","register","logout","removeItem","toNumber","value","isNaN","Number","cleanObject","object","result","parse","Object","keys","forEach","key","isVoid","useMount","callback","useEffect","useDebounce","delay","debouncedValue","setDebouncedValue","timeout","setTimeout","clearTimeout","useDocumentTitle","title","keepOnUnmount","oldTitle","useRef","resetRoute","href","origin","subset","obj","filteredEntries","entries","filter","includes","fromEntries","bootstrapUser","AuthContext","createContext","displayName","AuthProvider","setUser","queryClient","useQueryClient","Provider","form","clear","context","useContext"],"mappings":"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","file":"static/js/main.0b4305db.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/space.f6fff2b6.svg\";","import styled from \"@emotion/styled\";\nimport { Button, Spin, Typography } from \"antd\";\nimport { DevTools } from \"jira-dev-tool\";\nimport { isError } from \"utils\";\nimport space from \"assets/space.svg\";\n\n/* tsx组件块\n ============================================================================ */\nexport const FullPageLoading = () => (\n  <FullPage>\n    <Spin size={\"large\"} />\n  </FullPage>\n);\n\nexport const FullPageErrorFallback = ({ error }: { error: Error | null }) => (\n  <FullPage>\n    <DevTools />\n    <ErrorBox error={error} />\n  </FullPage>\n);\n\nexport const ErrorBox = ({ error }: { error: unknown }) => {\n  if (isError(error)) {\n    return <Typography.Text type={\"danger\"}>{error?.message}</Typography.Text>;\n  }\n  return null;\n};\n\n/* CSS组件块\n ============================================================================ */\nexport const Row = styled.div<{\n  gap?: number | boolean;\n  between?: boolean;\n  marginBottom?: number;\n}>`\n  display: flex;\n  align-items: center;\n  justify-content: ${(props) => (props.between ? \"space-between\" : undefined)};\n  margin-bottom: ${(props) => props.marginBottom + \"rem\"};\n  > * {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n    margin-right: ${(props) =>\n      typeof props.gap === \"number\"\n        ? props.gap + \"rem\"\n        : props.gap\n        ? \"2rem\"\n        : undefined};\n  }\n`;\n\nconst FullPage = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: url(${space});\n`;\n\nexport const ButtonNoPadding = styled(Button)`\n  padding: 0;\n`;\n\nexport const ScreenContainer = styled.div`\n  padding: 3.2rem;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  overflow: scroll;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n","import qs from \"qs\";\nimport * as auth from \"auth-provider\";\nimport { useAuth } from \"context/auth-context\";\nimport { useCallback } from \"react\";\nconst apiUrl = process.env.REACT_APP_API_URL;\n\ninterface Config extends RequestInit {\n  token?: string;\n  data?: object;\n}\n/**\n * 自定义 fetch 请求封装\n * @param endpoint 接口地址\n * @param Config 自定义配置\n * @returns Promise\n */\nexport const http = async (\n  endpoint: string,\n  { data, token, headers, ...customConfig }: Config = {}\n) => {\n  const config = {\n    method: \"GET\",\n    headers: {\n      Authorization: token ? `Bearer ${token}` : \"\",\n      \"Content-Type\": data ? \"application/json\" : \"\",\n    },\n    ...customConfig,\n  };\n\n  if (config.method.toUpperCase() === \"GET\") {\n    endpoint += `?${qs.stringify(data)}`;\n  } else {\n    config.body = JSON.stringify(data || {});\n  }\n\n  return window\n    .fetch(`${apiUrl}/${endpoint}`, config)\n    .then(async (response) => {\n      if (response.status === 401) {\n        await auth.logout();\n        window.location.reload();\n        return Promise.reject({ message: \"请重新登录\" });\n      }\n      const data = await response.json();\n      if (response.ok) {\n        return data;\n      } else {\n        return Promise.reject(data);\n      }\n    });\n};\n\n/**\n * 自动获取 user 的 token 加入 headers\n * @returns Promise\n */\nexport const useHttp = () => {\n  const { user } = useAuth();\n  return useCallback(\n    (...[endpoint, config]: Parameters<typeof http>) =>\n      http(endpoint, { ...config, token: user?.token }),\n    [user?.token]\n  );\n};\n","import { useCallback, useReducer, useState } from \"react\";\nimport { useMountedRef } from \"utils\";\n\ninterface State<D> {\n  error: Error | null;\n  data: D | null;\n  stat: \"idle\" | \"loading\" | \"error\" | \"success\";\n}\n\nconst defaultConfig = {\n  throwOnError: false,\n};\n\n/**\n * 自动判断组件是否挂载，挂载则返回可调用 dispatch 的回调函数\n * @param dispatch\n * @returns callback\n */\nconst useSafeDispatch = <T>(dispatch: (...args: T[]) => void) => {\n  const mountedRef = useMountedRef();\n  return useCallback(\n    (...args: T[]) => (mountedRef.current ? dispatch(...args) : void 0),\n    [dispatch, mountedRef]\n  );\n};\n\nconst defaultIinitialState: State<null> = {\n  stat: \"idle\",\n  data: null,\n  error: null,\n};\n/**\n * 处理异步请求\n * @param {State<D>} initialState\n * @param {boolean} initialConfig\n */\nexport const useAsync = <D>(\n  initialState?: State<D>,\n  initialConfig?: typeof defaultConfig\n) => {\n  const config = { ...defaultConfig, ...initialConfig };\n  const [state, dispatch] = useReducer(\n    (state: State<D>, action: Partial<State<D>>) => ({ ...state, ...action }),\n    {\n      ...defaultIinitialState,\n      ...initialState,\n    }\n  );\n  const [retry, setRetry] = useState(() => () => {});\n  const safeDispatch = useSafeDispatch(dispatch);\n\n  const setData = useCallback(\n    (data: D) =>\n      safeDispatch({\n        data,\n        stat: \"success\",\n        error: null,\n      }),\n    [safeDispatch]\n  );\n\n  const setError = useCallback(\n    (error: Error) =>\n      safeDispatch({\n        error,\n        stat: \"error\",\n        data: null,\n      }),\n    [safeDispatch]\n  );\n\n  /**\n   * 触发异步请求\n   * @param {Promise<D>} Promise\n   */\n  const run = useCallback(\n    (promise: Promise<D>, runConfig?: { retry: () => Promise<D> }) => {\n      if (!promise || !promise.then) {\n        throw new Error(\"请传入 Promise 类型数据\");\n      }\n      setRetry(() => () => {\n        if (runConfig?.retry) {\n          run(runConfig?.retry(), runConfig);\n        }\n      });\n      safeDispatch({ stat: \"loading\" });\n      return promise\n        .then((data) => {\n          setData(data);\n          return data;\n        })\n        .catch((error) => {\n          setError(error);\n          if (config.throwOnError) {\n            //主动抛出异常\n            return Promise.reject(error);\n          }\n          return error;\n        });\n    },\n    [config.throwOnError, safeDispatch, setData, setError]\n  );\n  return {\n    isIdle: state.stat === \"idle\",\n    isLoading: state.stat === \"loading\",\n    isError: state.stat === \"error\",\n    isSuccess: state.stat === \"success\",\n    run,\n    retry,\n    setData,\n    setError,\n    ...state,\n  };\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { useAuth } from \"context/auth-context\";\nimport ErrorBoundary from \"antd/lib/alert/ErrorBoundary\";\nimport { FullPageLoading } from \"components/lib\";\n\nconst AuthenticatedApp = React.lazy(() => import(\"authenticated-app\"));\nconst UnauthenticatedApp = React.lazy(() => import(\"unauthenticated-app\"));\nfunction App() {\n  const { user } = useAuth();\n  return (\n    <div className=\"App\">\n      <ErrorBoundary>\n        <React.Suspense fallback={<FullPageLoading />}>\n          {user ? <AuthenticatedApp /> : <UnauthenticatedApp />}\n        </React.Suspense>\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ReactNode } from \"react\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { AuthProvider } from \"context/auth-context\";\r\nexport const AppProviders = ({ children }: { children: ReactNode }) => {\r\n  return (\r\n    <QueryClientProvider client={new QueryClient()}>\r\n      <AuthProvider>{children}</AuthProvider>\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n","import \"./wdyr\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { DevTools, loadServer } from \"jira-dev-tool\";\nimport \"antd/dist/antd.less\";\nimport { AppProviders } from \"context\";\n\nloadServer(() =>\n  ReactDOM.render(\n    <React.StrictMode>\n      <AppProviders>\n        <DevTools />\n        <App />\n      </AppProviders>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  )\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { User } from \"types/user\";\nconst apiUrl = process.env.REACT_APP_API_URL;\nconst localStorageKey = \"__auth_provider_token__\";\n\nexport const getToken = () => window.localStorage.getItem(localStorageKey);\n\nexport const handleUserResponse = ({ user }: { user: User }) => {\n  window.localStorage.setItem(localStorageKey, user.token || \"\");\n  return user;\n};\n\nexport const login = (data: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(async (response: Response) => {\n    if (response.ok) {\n      return handleUserResponse(await response.json());\n    } else {\n      return Promise.reject(await response.json());\n    }\n  });\n};\n\nexport const register = (data: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(async (response: Response) => {\n    if (response.ok) {\n      return handleUserResponse(await response.json());\n    } else {\n      return Promise.reject(await response.json());\n    }\n  });\n};\n\nexport const logout = async () =>\n  window.localStorage.removeItem(localStorageKey);\n","// 自定义工具库\nimport { useEffect, useRef, useState } from \"react\";\n\n/**\n * 数字类型转换，无法转换默认为 0\n * @param {unknown} value\n * @returns 0 | Number(value)\n */\nexport const toNumber = (value: unknown) =>\n  isNaN(Number(value)) ? 0 : Number(value);\n\n/**\n * 布尔类型转换,且排除 value为 0 的特殊情况\n * @param {unknown} value\n * @returns  对 value 取反\n */\nexport const isFalsy = (value: unknown) => (value === 0 ? false : !value);\n\n/**\n * 判断值有无意义\n * @param {unknown} value\n */\nexport const isVoid = (value: unknown) =>\n  value === undefined || value === null || value === \"\";\n\n/**\n * 类型守卫\n * 如果为 Error类型，应具有message属性\n * @param value\n */\nexport const isError = (value: any): value is Error => value?.message;\n\n/**\n * 清理对象空属性\n * @param {object} object\n * @returns {object}\n */\n\nexport const cleanObject = (object?: { [key: string]: unknown }) => {\n  if (!object) {\n    return {};\n  }\n  //在函数里改变传入的对象是不好的行为,Object.assign({},object)仍会发生浅拷贝，不推荐\n  const result = JSON.parse(JSON.stringify(object));\n  Object.keys(result).forEach((key) => {\n    const value = result[key];\n    if (isVoid(value)) {\n      delete result[key];\n    }\n  });\n  return result;\n};\n\n/**\n * 利用custom hook实现mount钩子\n * @param {function} callback\n */\nexport const useMount = (callback: () => void) => {\n  useEffect(() => {\n    callback();\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\n/**\n * 利用custom hook 实现的 debounce\n * @template V\n * @param {V} value\n * @param {number} delay\n * @returns {V} debouncedValue\n */\nexport const useDebounce = <V>(value: V, delay?: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    // value变化后设定计时器\n    const timeout = setTimeout(() => setDebouncedValue(value), delay);\n\n    // 上一个useEffect处理完后执行\n    return () => clearTimeout(timeout);\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\n/**\n * 设置页面标题\n * @param {string} title\n * @param {boolean} keepOnUnmount 卸载后保持标题不变\n */\nexport const useDocumentTitle = (\n  title: string,\n  keepOnUnmount: boolean = true\n) => {\n  const oldTitle = useRef(document.title).current;\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  useEffect(() => {\n    return () => {\n      if (!keepOnUnmount) {\n        document.title = oldTitle;\n      }\n    };\n  }, [keepOnUnmount, oldTitle]);\n};\n\n/**\n * 重置为根路由\n */\nexport const resetRoute = () => (window.location.href = window.location.origin);\n\n/**\n * 传入一个对象，和键集合，返回对应的对象中的键值对\n * @param obj\n * @param keys\n */\nexport const subset = <\n  O extends { [key in string]: unknown },\n  K extends keyof O\n>(\n  obj: O,\n  keys: K[]\n) => {\n  const filteredEntries = Object.entries(obj).filter(([key]) =>\n    keys.includes(key as K)\n  );\n  return Object.fromEntries(filteredEntries) as Pick<O, K>;\n};\n/**\n * 返回组件挂载状态;\n * @returns false:未挂载或已卸载 | true: 已挂载\n */\nexport const useMountedRef = () => {\n  const mountedRef = useRef(false);\n\n  useEffect(() => {\n    mountedRef.current = true;\n    return () => {\n      mountedRef.current = false;\n    };\n  });\n  return mountedRef;\n};\n","import React, { ReactNode } from \"react\";\r\nimport * as auth from \"auth-provider\";\r\nimport { User } from \"types/user\";\r\nimport { http } from \"utils/http\";\r\nimport { useMount } from \"utils\";\r\nimport { useAsync } from \"utils/use-async\";\r\nimport { FullPageErrorFallback, FullPageLoading } from \"components/lib\";\r\nimport { useQueryClient } from \"react-query\";\r\n\r\ninterface AuthForm {\r\n  username: string;\r\n  password: string;\r\n}\r\n/**\r\n * 获取 user 信息\r\n * @returns user\r\n */\r\nconst bootstrapUser = async () => {\r\n  let user = null;\r\n  const token = auth.getToken();\r\n  if (token) {\r\n    const data = await http(\"me\", { token });\r\n    user = data.user;\r\n  }\r\n  return user;\r\n};\r\n/**\r\n * 一个上下文对象;\r\n * 对外暴露给提供者 Provider(通常在组件树中上层的位置)和消费者(上下文内任何获取数据的组件)；\r\n * 在上下文之内的所有子组件都可以访问这个上下文环境之内的数据，并且不用通过props；\r\n */\r\nconst AuthContext = React.createContext<\r\n  | {\r\n      user: User | null;\r\n      register: (form: AuthForm) => Promise<void>;\r\n      login: (form: AuthForm) => Promise<void>;\r\n      logout: () => Promise<void>;\r\n    }\r\n  | undefined\r\n>(undefined);\r\nAuthContext.displayName = \"AuthContext\";\r\n\r\n/**\r\n * 提供者，为消费者提供 context 之内的数据\r\n * @param 需要渲染的子组件\r\n * @returns 一个具有组件和数据的父容器\r\n */\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const {\r\n    data: user,\r\n    error,\r\n    isLoading,\r\n    isIdle,\r\n    isError,\r\n    run,\r\n    setData: setUser,\r\n  } = useAsync<User | null>();\r\n  const queryClient = useQueryClient();\r\n\r\n  //为方便使用，将register,login,logout方法封装并暴露出去\r\n  const register = (form: AuthForm) => auth.register(form).then(setUser);\r\n  const login = (form: AuthForm) => auth.login(form).then(setUser);\r\n  const logout = () =>\r\n    auth.logout().then(() => {\r\n      setUser(null);\r\n      queryClient.clear();\r\n    });\r\n\r\n  useMount(() => {\r\n    run(bootstrapUser());\r\n  });\r\n  if (isIdle || isLoading) {\r\n    return <FullPageLoading />;\r\n  }\r\n  if (isError) {\r\n    return <FullPageErrorFallback error={error} />;\r\n  }\r\n  return (\r\n    <AuthContext.Provider\r\n      children={children}\r\n      value={{ user, login, register, logout }}\r\n    />\r\n  );\r\n};\r\n\r\n/**\r\n * 获取当前Context 中 Provider 提供的内容\r\n */\r\nexport const useAuth = () => {\r\n  const context = React.useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth必须在AuthProvider中使用\");\r\n  }\r\n  return context;\r\n};\r\n"],"sourceRoot":""}